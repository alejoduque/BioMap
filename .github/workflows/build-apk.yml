name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Capacitor CLI globally
      run: npm install -g @capacitor/cli@latest
    
    - name: Build web app
      run: npm run build
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: '34'
        build-tools: '34.0.0'
    
    - name: Sync Capacitor
      run: cap sync
    
    - name: Build APK
      run: |
        cd android
        # Clear any conflicting Java home settings
        unset ORG_GRADLE_JAVA_HOME || true
        
        # Build APK with info level logging and capture full output
        set +e  # Don't exit on error, let us capture the full output
        ./gradlew assembleDebug --stacktrace --info -Dorg.gradle.java.home="$JAVA_HOME" 2>&1 | tee build.log
        BUILD_EXIT_CODE=$?
        set -e  # Re-enable exit on error
        
        echo "Build completed with exit code: $BUILD_EXIT_CODE"
        
        # Check if APK was actually generated despite exit code
        if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
          echo "SUCCESS: APK was generated successfully!"
          echo "APK size: $(ls -lh app/build/outputs/apk/debug/app-debug.apk)"
        else
          echo "=== BUILD FAILED ==="
          echo "APK was not generated. Last 50 lines of build log:"
          tail -50 build.log
          echo "=== END OF BUILD LOG ==="
          exit 1
        fi
      env:
        JAVA_HOME: ${{ env.JAVA_HOME }}
        ANDROID_HOME: ${{ env.ANDROID_HOME }}
        ORG_GRADLE_JAVA_HOME: ""
    
    - name: Get Git revision and info
      id: git_rev
      run: |
        echo "rev=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "Build Info:" > build-info.txt
        echo "Git Revision: $(git rev-parse --short HEAD)" >> build-info.txt
        echo "Full Revision: $(git rev-parse HEAD)" >> build-info.txt
        echo "Commit Message: $(git log -1 --pretty=format:'%s')" >> build-info.txt
        echo "Build Date: $(date)" >> build-info.txt
        echo "Build URL: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> build-info.txt
    
    - name: Rename and upload APK
      run: |
        cd android/app/build/outputs/apk/debug
        mv app-debug.apk biomap-debug-${{ steps.git_rev.outputs.rev }}.apk
        echo "APK renamed: biomap-debug-${{ steps.git_rev.outputs.rev }}.apk"
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: biomap-debug-${{ steps.git_rev.outputs.rev }}
        path: |
          android/app/build/outputs/apk/debug/biomap-debug-${{ steps.git_rev.outputs.rev }}.apk
          build-info.txt
    
    - name: Upload build log (if build failed)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-log-${{ steps.git_rev.outputs.rev }}
        path: android/build.log 